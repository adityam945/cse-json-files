  [{
      "_id": "5ed74d3f3fe12440e0152b4f",
      "subcode": "17CS35",
      "subname": "UNIX AND SHELL PROGRAMMING ",
      "m1": "Module 1",
      "m1desc": "Introduction, Brief history. Unix Components/Architecture. Features of Unix. The UNIX Environment and UNIX Structure, Posix and Single Unix specification.  The login prompt. General features of Unix commands/ command structure. Command arguments and options. Understanding of some basic commands such as echo, printf, ls, who, date, passwd, cal, Combining commands. Meaning of Internal and external commands. The type command: knowing the type of a command and locating it. The man command knowing more about Unix commands and using Unix online manual pages. The man with keyword option and whatis. The more command and using it with other commands. Knowing the user terminal, displaying its characteristics and setting characteristics. Managing the non-uniform behaviour of terminals and keyboards. The root login. Becoming the super user: su command. The /etc/passwd and /etc/shadow files. Commands to add, modify and delete users. ",
      "m2": "Module 2",
      "m2desc": "Unix files. Naming files. Basic file types/categories. Organization of files. Hidden files. Standard directories. Parent child relationship. The home directory and the HOME variable. \n\n Reaching required files- the PATH variable, manipulating the PATH, Relative and absolute pathnames.\n\n Directory commands – pwd, cd, mkdir, rmdir commands.\n The dot (.) and double dots (..) notations to represent present and parent directories and their usage in relative path names.  \n\nFile related commands – cat, mv, rm, cp, wc and od commands. File attributes and permissions and knowing them. The ls command with options.\n\n  Changing file permissions: the relative and absolute permissions changing methods. Recursively changing file permissions. Directory permissions. ",
      "m3": "Module 3",
      "m3desc": "The vi editor. Basics. The .exrc file.  Different ways of invoking and quitting vi. Different modes of vi. Input mode commands. Command mode commands. The ex mode commands. Illustrative examples Navigation commands. Repeat command. Pattern searching. The search and replace command. The set, map and abbr commands. Simple examples using these commands. \n\nThe shells interpretive cycle. Wild cards and file name generation. Removing the special meanings of wild cards. Three standard files and redirection. Connecting commands: Pipe. Splitting the output: tee. Command substitution. Basic and Extended regular expressions. The grep, egrep. Typical examples involving different regular expressions.  ",
      "m4": "Module 4",
      "m4desc": "Shell programming. Ordinary and environment variables. The .profile. Read and readonly commands. Command line arguments. exit and exit status of a command. Logical operators for conditional execution. The test command and its shortcut. The if, while, for and case control statements. The set and shift commands and handling positional parameters. The here ( << ) document and trap command. Simple shell program examples. File inodes and the inode structure. File links – hard and soft links. Filters. Head and tail commands. Cut and paste commands. The sort command and its usage with different options. The umask and default file permissions. Two special files /dev/null and /dev/tty.  ",
      "m5": "Module 5",
      "m5desc": "Meaning of a process. Mechanism of process creation. Parent and child process. The ps command with its options. Executing a command at a specified point of time: at command. Executing a command periodically: cron command and the crontab file.. Signals. The nice and nohup commands. Background processes. The bg and fg command. The kill command. The find command with illustrative example. \n\n  Structure of a perl script. Running a perl script. Variables and operators. String handling functions. Default variables - $_ and $. – representing the current line and current line number. The range operator. Chop() and chomp() functions. Lists and arrays. The @- variable. The splice operator, push(), pop(), split() and join(). File handles and handling file – using open(), close() and die () functions.. Associative arrays – keys and value functions. Overview of decision making loop control structures – the foreach. Regular expressions – simple and multiple search patterns. The match and substitute operators.  Defining and using subroutines.",
      "descname": "Prescribed text books",
      "descdata": "Text  Books: \n1. Sumitabha Das., Unix Concepts and Applications., 4th Edition., Tata McGraw Hill  \n2. Behrouz A. Forouzan, Richard F. Gilberg : UNIX and Shell Programming- Cengage Learning – India Edition.  2009.\n\n Reference Books:  \n 1. M.G. Venkatesh Murthy: UNIX & Shell Programming, Pearson Education. \n2. Richard Blum , Christine Bresnahan : Linux Command Line and Shell Scripting Bible, 2ndEdition , Wiley,2014. ",
              "descname": "Prescribed Text books",
        "descdata": "Text Books:\n1. B. S. Grewal, Higher Engineering Mathematics, Khanna publishers, 42nd edition, 2013.\n2. B.V. Ramana Higher Engineering Mathematics Tata McGraw-Hill,2006.\n\nReference Books:\n1. N. P. Bali and Manish Goyal, A text book of Engineering mathematics , Laxmi publications, latestedition.\n2. Kreyszig, Advanced Engineering Mathematics  - 9th edition, Wiley.\n3. H. K Dass and Er. Rajnish Verma ,Higher Engineering Mathematics, S. Chand, 1st ed.",
        "notesurl": "https://adityam945.github.io/cse-json-files/",
        "notesscreenname": "NotesListFile",
        "notesscreenparams": "17mat31notes.json",
        "qpscreentype": "QPaperListFile",
        "qpurl": "https://adityam945.github.io/cse-json-files/",
        "qpscreenparams": "17mat31qp.json",
        "qbscreentype": "QBankListFile",
        "qburl": "https://adityam945.github.io/cse-json-files/",
        "qbscreenparams": "17mat31qb.json"
  }]
