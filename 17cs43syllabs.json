[{
    "_id": "5ed786d23fe12440e0152b53",
    "subcode": "17CS43",
    "subname": "DESIGN AND ANALYSIS OF ALGORITHMS ",
    "m1": "Module 1",
    "m1desc": "Introduction: \n What is an Algorithm? (T2:1.1), Algorithm Specification (T2:1.2), Analysis Framework (T1:2.1),\n\n Performance Analysis:\n Space complexity, Time complexity (T2:1.3). \n\n Asymptotic Notations: \n Big-Oh notation (O), Omega notation (Ω ), Theta notation ( Θ ), and Little-oh notation (o), Mathematical analysis of Non-Recursive and recursive Algorithms with Examples (T1:2.2, 2.3, 2.4). \n\nImportant Problem Types:\n Sorting, Searching, String processing, Graph Problems, Combinatorial Problems.\n\n Fundamental Data Structures: \nStacks, Queues, Graphs, Trees, Sets and Dictionaries. (T1:1.3,1.4) ",
    "m2": "Module 2",
    "m2desc": "Divide and Conquer: \nGeneral method, Binary search, Recurrence equation for divide and conquer, Finding the maximum and minimum (T2:3.1, 3.3, 3.4), Merge sort, Quick sort (T1:4.1, 4.2), Strassen’s matrix multiplication (T2:3.8), Advantages and Disadvantages of divide and conquer. \n\n Decrease and Conquer Approach:\n Topological Sort. (T1:5.3) ",
    "m3": "Module 3",
    "m3desc": "Greedy Method:\n General method, Coin Change Problem, Knapsack Problem, Job sequencing with deadlines (T2:4.1, 4.3, 4.5).\n\n Minimum cost spanning trees: \nPrim’s Algorithm, Kruskal’s Algorithm (T1:9.1, 9.2). \n\nSingle source shortest paths:\n Dijkstra's Algorithm (T1:9.3). \n\n Optimal Tree problem:\n Huffman Trees and Codes (T1:9.4). \n\n Transform and Conquer Approach: \n Heaps and Heap Sort (T1:6.4). ",
    "m4": "Module 4",
    "m4desc": "Dynamic Programming: \n General method with Examples, Multistage Graphs (T2:5.1, 5.2). \n\n Transitive Closure:  \n Warshall’s Algorithm,\n\n  All Pairs Shortest Paths:\n Floyd's Algorithm, Optimal Binary Search Trees, Knapsack problem ((T1:8.2, 8.3, 8.4), Bellman-Ford Algorithm (T2:5.4), Travelling Sales Person problem (T2:5.9), Reliability design (T2:5.8). ",
    "m5": "Module 5",
    "m5desc": "Backtracking: \n General method (T2:7.1), N-Queens problem (T1:12.1), Sum of subsets problem (T1:12.1), Graph coloring (T2:7.4), Hamiltonian cycles (T2:7.5). \n\n Branch and Bound: \nAssignment Problem, Travelling Sales Person problem (T1:12.2), \n\n 0/1 Knapsack problem (T2:8.2, T1:12.2): \n LC Branch and Bound solution (T2:8.2), FIFO Branch and Bound solution (T2:8.2). \n\n NP-Complete and NP-Hard problems: \nBasic concepts, non-deterministic algorithms, P, NP, NP-Complete, and NP-Hard classes (T2:11.1).     ",
    "descname": "Prescribed text books",
    "descdata": "Text  Books: \nT1. Introduction to the Design and Analysis of Algorithms, Anany Levitin:, 2rd Edition, 2009. Pearson. \n T2. Computer Algorithms/C++, Ellis Horowitz, Satraj Sahni and Rajasekaran, 2nd Edition, 2014, Universities Press  \n\nReference Books:\n 1. Introduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronal L. Rivest, Clifford Stein, 3rd Edition, PHI \n 2. Design and Analysis of Algorithms , S. Sridhar, Oxford (Higher Education) ",
            "notesurl": "https://adityam945.github.io/cse-json-files/",
        "notesscreenname": "NotesListFile",
        "notesscreenparams": "17mat31notes.json",
        "qpscreentype": "QPaperListFile",
        "qpurl": "https://adityam945.github.io/cse-json-files/",
        "qpscreenparams": "17mat31qp.json",
        "qbscreentype": "QBankListFile",
        "qburl": "https://adityam945.github.io/cse-json-files/",
        "qbscreenparams": "17mat31qb.json"
  }]
